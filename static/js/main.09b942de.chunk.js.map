{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Companies.js","Routes/Countries.js","Routes/Videos.js","Routes/Seasons.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Routes/Collections.js","Components/Router.js","Components/GllbalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","collectionApi","Container","styled","div","Title","span","Grid","Section","title","children","role","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","popuar","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Detail","Companies","result","location","production_companies","company","index","name","Countries","production_countries","contry","Item","li","Videos","videos","video","width","height","src","key","frameborder","allow","allowfullscreen","Cover","bgImage","Seasons","seasons","season","air_date","Backdrop","Content","Data","h3","ItemContainer","Divider","Overview","p","LinkGroup","ALink","Coleections","SLink","Link","active","DetailPresenter","pathname","useReactRouter","backdrop_path","runtime","episode_run_time","genres","genre","overview","href","imdb_id","belongs_to_collection","path","component","DetailContainer","includes","match","push","history","parseId","parseInt","isNaN","Header","header","List","ul","current","withRouter","Collections","useState","collection","setCollection","setLoading","useEffect","getData","console","log","Part","parts","part","exact","Home","TV","Search","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09b942de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key : \"9c572200d17e7900395f0c816781d223\",\r\n        language: \"en-US\"\r\n    }\r\n});\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\" // 예고편 정보 가져옴\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term) // 인코딩(&lt; 등)\r\n        }\r\n    })\r\n  };\r\n  \r\n  export const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: (id) => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\" // 예고편 정보 가져옴\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term) // 인코딩(&lt; 등)\r\n        }\r\n    })    \r\n  };\r\n\r\n  export const collectionApi = {\r\n      collectionDetail: (id) => api.get(`collection/${id}`)\r\n  }","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;  \r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n      <Text color={color}>{text}</Text>\r\n    </Container>\r\n  );\r\n\r\n  Message.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n  };\r\n  \r\n  export default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;  \r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n            bgUrl={\r\n                imageUrl\r\n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n                : require(\"../assets/noPosterSmall.png\").default\r\n            }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n  <Helmet>\r\n    <title>Movies | Nomflix</title>\r\n  </Helmet>\r\n  {loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map(movie => (\r\n            <Poster\r\n            key={movie.id}\r\n            id={movie.id}\r\n            imageUrl={movie.poster_path}\r\n            title={movie.original_title}\r\n            rating={movie.vote_average}\r\n            year={movie.release_date && movie.release_date.substring(0, 4)}\r\n            isMovie={true}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {upcoming && upcoming.length > 0 && (\r\n        <Section title=\"Upcoming Movies\">\r\n          {upcoming.map(movie => (\r\n            <Poster\r\n            key={movie.id}\r\n            id={movie.id}\r\n            imageUrl={movie.poster_path}\r\n            title={movie.original_title}\r\n            rating={movie.vote_average}\r\n            year={movie.release_date && movie.release_date.substring(0, 4)}\r\n            isMovie={true}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Movies\">\r\n          {popular.map(movie => (\r\n            <Poster\r\n            key={movie.id}\r\n            id={movie.id}\r\n            imageUrl={movie.poster_path}\r\n            title={movie.original_title}\r\n            rating={movie.vote_average}\r\n            year={movie.release_date && movie.release_date.substring(0, 4)}\r\n            isMovie={true}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import { moviesApi } from \"api\";\r\nimport React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\n// Container : Data, state, api, logic\r\n// Presenter : view\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: { results: nowPlaying }\r\n            } = await moviesApi.nowPlaying();\r\n            const {\r\n                data: { results: upcoming }\r\n            } = await moviesApi.upcoming();\r\n            const {\r\n                data: { results: popular }\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movie information.\"\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n        return (\r\n        <HomePresenter \r\n            nowPlaying={nowPlaying}\r\n            upcoming={upcoming}\r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n        />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top Rated Shows\">\r\n          {topRated.map(show => (\r\n            <Poster\r\n            key={show.id}\r\n            id={show.id}\r\n            imageUrl={show.poster_path}\r\n            title={show.original_name}\r\n            rating={show.vote_average}\r\n            year={show.first_air_date ? show.first_air_date.substring(0, 4) : ''}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Shows\">\r\n          {popular.map(show => (\r\n            <Poster\r\n            key={show.id}\r\n            id={show.id}\r\n            imageUrl={show.poster_path}\r\n            title={show.original_name}\r\n            rating={show.vote_average}\r\n            year={show.first_air_date ? show.first_air_date.substring(0, 4) : ''}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"Airing Today\">\r\n          {airingToday.map(show => (\r\n            <Poster\r\n            key={show.id}\r\n            id={show.id}\r\n            imageUrl={show.poster_path}\r\n            title={show.original_name}\r\n            rating={show.vote_average}\r\n            year={show.first_air_date ? show.first_air_date.substring(0, 4) : ''}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n  )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        error: null,\r\n        loading: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const { \r\n                data: { results: topRated }\r\n             } = await tvApi.topRated();\r\n            const { \r\n                data: { results: popular }\r\n             } = await tvApi.popular();\r\n            const {\r\n                 data: { results: airingToday }\r\n             } = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, popuar, airingToday, error, loading } = this.state;\r\n        return (\r\n            <TVPresenter \r\n                topRated={topRated}\r\n                popuar={popuar}\r\n                airingToday={airingToday}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  error,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>    \r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date.substring(0, 4)}\r\n            />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n        movieResults &&\r\n        tvResults.length === 0 &&\r\n        movieResults.length === 0 && (\r\n          <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n        )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        loading: false\r\n    };\r\n\r\n    // 유효성 체크\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if(searchTerm !== \"\"){\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = event => {\r\n        const {\r\n          target: { value }\r\n        } = event;\r\n        this.setState({\r\n          searchTerm: value\r\n        });\r\n    };    \r\n\r\n    searchByTerm = async() => {\r\n        const { searchTerm } = this.state;\r\n        try{\r\n            const {\r\n                 data: { results : movieResults }\r\n            } = await moviesApi.search(searchTerm);\r\n            const {\r\n                 data: { results : tvResults }\r\n            } = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                loading: true,\r\n                movieResults,\r\n                tvResults\r\n            });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find Find Results.\"\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, error, loading} = this.state;\r\n        return (\r\n            <SearchPresenter \r\n                movieResults={movieResults}\r\n                tvResults={tvResults}\r\n                error={error}\r\n                loading={loading}\r\n                searchTerm={searchTerm}\r\n                handleSubmit={this.handleSubmit}\r\n                updateTerm={this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst Detail = styled.div`\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst Companies = (props) => {\r\n    const { location: { state: { result } } } = props;\r\n    return( \r\n        <Container>\r\n            <Detail>{result.production_companies.map((company, index) => index === result.production_companies.length - 1 ? company.name : `${company.name} / ` )}</Detail>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Companies;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst Detail = styled.div`\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst Countries = (props) => {\r\n    const { location: { state: { result } } } = props;\r\n    return( \r\n        <Container>\r\n            <Detail>{result.production_countries.map((contry, index) => index == result.production_countries.length - 1 ? contry.name : `${contry.name} / `)}</Detail>        \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Countries;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst Detail = styled.div`\r\n    font-size: 13px;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    text-decoration: underline;\r\n    margin-bottom:10px;\r\n    font-size: 13px;\r\n`;\r\n\r\nconst Videos = (props) => {\r\n    const { location: { state: { result } } } = props;\r\n    return( \r\n        <Container>\r\n            <ul>\r\n            <Detail>\r\n                {result.videos.results.map((video, index) => \r\n                    <Item>\r\n                        <iframe \r\n                            width=\"560\" \r\n                            height=\"315\" \r\n                            src={`https://www.youtube.com/embed/${video.key}`} \r\n                            title=\"YouTube video player\" \r\n                            frameborder=\"0\" \r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                            allowfullscreen>\r\n                        </iframe>\r\n                    </Item>)}\r\n            </Detail>\r\n            </ul>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Videos;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst Detail = styled.div`\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 355px;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    height: 530px;\r\n    border-radius: 5px;\r\n    margin: 10px 0;\r\n`; \r\n\r\nconst Seasons = (props) => {\r\n    const { location: { state: { result } } } = props;\r\n    return( \r\n        <Container>\r\n            <ul>\r\n                <Detail>{\r\n                    result.seasons && \r\n                    result.seasons.map(season => <Item>{season.name} / {season.air_date && season.air_date.substring(0, 4)} \r\n                    <Cover\r\n                    bgImage={\r\n                        season.poster_path\r\n                        ? `https://image.tmdb.org/t/p/original${season.poster_path}`\r\n                        : require(\"../assets/noPosterSmall.png\").default\r\n                    }/></Item> )\r\n                }</Detail>        \r\n            </ul>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Seasons;","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Companies from \"Routes/Companies\";\r\nimport Countries from \"Routes/Countries\";\r\nimport Videos from \"Routes/Videos\";\r\nimport useReactRouter from \"use-react-router\";\r\nimport Seasons from \"Routes/Seasons\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst LinkGroup = styled.div`\r\n  display: flex;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ALink = styled.a`\r\n  margin-bottom: 10px;\r\n  width: 145px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid white;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Coleections = styled.div`\r\n  border: 1px solid white;\r\n  width: 300px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n`;\r\n\r\n\r\nconst SLink = styled(Link)`\r\n  font-size: 12px;\r\n  margin-top: 20px;\r\n  display:inline-block;\r\n  padding: 20px 25.5px;\r\n  background-color: ${props => (props.active ? \"white\" : \"black\")};\r\n  color: ${props => (props.active ? \"black\" : \"white\")};\r\n  font-weight: ${props => (props.active ? \"bold\" : \"\")};\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error, isMovie}) => {\r\n  const {\r\n    location: { pathname }\r\n  } = useReactRouter();\r\n\r\n  return (\r\n    loading ? (\r\n      <>\r\n        <Helmet>\r\n          <title>Loading | Nomflix</title>\r\n        </Helmet>\r\n        <Loader />\r\n      </>\r\n    ) : (\r\n      <>\r\n        <Container>\r\n          <Helmet>\r\n            <title>\r\n              {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n              | Nomflix\r\n            </title>\r\n          </Helmet>      \r\n          <Backdrop\r\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n          />\r\n          <Content>\r\n            <Cover\r\n              bgImage={\r\n                result.poster_path\r\n                  ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                  : require(\"../../assets/noPosterSmall.png\").default\r\n              }\r\n            />\r\n            <Data>\r\n              <Title>\r\n                {result.original_title\r\n                  ? result.original_title\r\n                  : result.original_name}\r\n              </Title>\r\n              <ItemContainer>\r\n                <Item>\r\n                  {result.release_date\r\n                    ? result.release_date.substring(0, 4)\r\n                    : (result.first_air_date ? result.first_air_date.substring(0, 4) : '' )}\r\n                </Item>\r\n                <Divider>•</Divider>\r\n                <Item>\r\n                  {result.runtime ? result.runtime : (result.episode_run_time ? result.episode_run_time[0] : '' )} min\r\n                </Item>\r\n                <Divider>•</Divider>\r\n                <Item>\r\n                  {result.genres &&\r\n                    result.genres.map((genre, index) =>\r\n                      index === result.genres.length - 1\r\n                        ? genre.name\r\n                        : `${genre.name} / `\r\n                    )}\r\n                </Item>\r\n              </ItemContainer>\r\n              <Overview>{result.overview}</Overview>\r\n              <LinkGroup>\r\n                <ALink href={`https://www.imdb.com/title/${result.imdb_id}`} target=\"_blank\">IMDB Link</ALink>\r\n                <ALink href={`https://www.youtube.com/results?search_query=${result.original_title ? result.original_title : result.original_name}`} target=\"_blank\">YT Videos</ALink>\r\n              </LinkGroup>\r\n              {result.belongs_to_collection ? (\r\n                <Link to={`/collections/${result.belongs_to_collection.id}`}>\r\n                  <Coleections>\r\n                      View Collections\r\n                  </Coleections>\r\n                </Link>\r\n                ) : <></>\r\n              }\r\n              <SLink \r\n                active={pathname === (isMovie ? `/movie/${result.id}/videos` : `/show/${result.id}/videos`)} \r\n                to={{ pathname: isMovie ? `/movie/${result.id}/videos` : `/show/${result.id}/videos`, state: {result} }}\r\n              >Videos</SLink>\r\n              <SLink \r\n                active={pathname === (isMovie ? `/movie/${result.id}/companies` : `/show/${result.id}/companies`)} \r\n                to={{ pathname: isMovie ? `/movie/${result.id}/companies` : `/show/${result.id}/companies`, state: {result} }}\r\n              >Companies</SLink>\r\n              <SLink \r\n                active={pathname === (isMovie ? `/movie/${result.id}/countries` : `/show/${result.id}/countries`)} \r\n                to={{ pathname: isMovie ? `/movie/${result.id}/countries` : `/show/${result.id}/countries`, state: {result} }}\r\n              >Countries</SLink>\r\n              {!isMovie && (\r\n                <SLink\r\n                  active={pathname === `/show/${result.id}/seasons`} \r\n                  to={{ pathname: `/show/${result.id}/seasons`, state: {result} }}                \r\n                >Seasons</SLink>\r\n              )}\r\n              <Route path={isMovie ? \"/movie/:id/videos\" : \"/show/:id/videos\"} component={Videos}></Route>\r\n              <Route path={isMovie ? \"/movie/:id/companies\" : \"/show/:id/companies\" } component={Companies}></Route>\r\n              <Route path={isMovie ? \"/movie/:id/countries\" : \"/show/:id/countries\" } component={Countries}></Route>\r\n              {!isMovie && <Route path=\"/show/:id/seasons\" component={Seasons}></Route>}\r\n            </Data>        \r\n          </Content>\r\n        </Container>\r\n      </>\r\n    )    \r\n  )\r\n}\r\n\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        const{\r\n            location: { pathname }\r\n        } = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        };        \r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { \r\n            match: { \r\n                params: { id }\r\n            },\r\n            history: { push }\r\n        } = this.props;\r\n        const { isMovie } = this.state;\r\n        const parseId = parseInt(id);\r\n        if(isNaN(parseId)) {\r\n            return push(\"/\");\r\n        }\r\n        \r\n        let result = null;\r\n        try {\r\n            if(isMovie) {\r\n                ({ data: result } = await moviesApi.movieDetail(parseId));\r\n            } else {\r\n                ({ data: result } = await tvApi.showDetail(parseId));\r\n            }\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find anything.\"\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n                result,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading, isMovie } = this.state;\r\n        return(\r\n            <DetailPresenter \r\n                result={result}\r\n                error={error}\r\n                loading={loading}\r\n                isMovie={isMovie}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\"; \r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid ${props => props.current ? \"darksalmon\" : \"transparent\"};\r\n  transition: border-bottom .3s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({location: {pathname}}) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink to=\"/search\">Saerch</SLink>\r\n            </Item>                        \r\n        </List>\r\n    </Header>\r\n));","import { collectionApi } from \"api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Collections = ( props ) => {\r\n    const [ collection, setCollection ] = useState({});\r\n    const [ loading, setLoading ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    let data = null;\r\n    const getData = async() => {\r\n        try {\r\n            const { \r\n                match: { \r\n                    params: { id }\r\n                }\r\n            } = props;\r\n            ({ data } = await collectionApi.collectionDetail(id));\r\n        } catch(e) {\r\n            console.log(e);\r\n        } finally {\r\n            setCollection(data);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const Container = styled.div`\r\n        height: calc(100vh - 50px);\r\n        width: 100%;\r\n        position: relative;\r\n        padding: 50px;\r\n    `;\r\n\r\n    const Backdrop = styled.div`\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-image: url(${props => props.bgImage});\r\n        background-position: center center;\r\n        background-size: cover;\r\n        filter: blur(3px);\r\n        opacity: 0.5;\r\n        z-index: 0;\r\n    `;    \r\n\r\n    const Content = styled.div`\r\n        display: flex;\r\n        width: 100%;\r\n        position: relative;\r\n        z-index: 1;\r\n        height: 100%;\r\n    `;\r\n\r\n    const Cover = styled.div`\r\n        width: 30%;\r\n        background-image: url(${props => props.bgImage});\r\n        background-position: center center;\r\n        background-size: cover;\r\n        height: 100%;\r\n        border-radius: 5px;\r\n    `;    \r\n\r\n    const Data = styled.div`\r\n        width: 70%;\r\n        margin-left: 20px;\r\n    `;\r\n\r\n    const Title = styled.h3`\r\n        font-size: 32px;\r\n    `;\r\n\r\n    const ItemContainer = styled.div`\r\n        margin: 20px 0;\r\n    `;\r\n\r\n    const Item = styled.span``;\r\n    \r\n    const Divider = styled.span`\r\n        margin: 0 10px;\r\n    `;    \r\n\r\n    const Part = styled.div`\r\n        width: 600px;\r\n        background-image: url(${props => props.bgImage});\r\n        background-position: center center;\r\n        background-size: cover;\r\n        border-radius: 5px;    \r\n        height: 900px;\r\n        margin-top: 20px;\r\n    `;\r\n\r\n    const Overview = styled.p`\r\n        font-size: 12px;\r\n        opacity: 0.7;\r\n        line-height: 1.5;\r\n        width: 50%;\r\n        margin-bottom: 20px;\r\n    `;   \r\n\r\n    return (\r\n        <>\r\n        {\r\n            loading ? (\r\n                <>\r\n                    <Helmet>\r\n                        <title>Loading | Collections</title>\r\n                    </Helmet>\r\n                    <Loader />                \r\n                </>\r\n            ) : (\r\n                <Container>\r\n                    <Helmet>\r\n                        <title>{collection.name} | Collections</title>\r\n                    </Helmet>\r\n                    <Backdrop\r\n                        bgImage={`https://image.tmdb.org/t/p/original${collection.backdrop_path}`}\r\n                    />                    \r\n                    <Content>\r\n                        <Cover\r\n                            bgImage={\r\n                                collection.poster_path\r\n                                ? `https://image.tmdb.org/t/p/original${collection.poster_path}`\r\n                                : require(\"../assets/noPosterSmall.png\").default\r\n                            }\r\n                        />\r\n                        <Data>\r\n                            {collection.parts.map(part => (\r\n                                <>\r\n                                    <Title>\r\n                                        {part.original_title\r\n                                        ? part.original_title\r\n                                        : part.original_name}\r\n                                    </Title>\r\n                                    <ItemContainer>\r\n                                        <Item>\r\n                                        {part.release_date\r\n                                            ? part.release_date.substring(0, 4)\r\n                                            : (part.first_air_date ? part.first_air_date.substring(0, 4) : '' )}\r\n                                        </Item>\r\n                                        <Overview>{part.overview}</Overview>\r\n                                        <Part\r\n                                            bgImage={\r\n                                                part.poster_path\r\n                                                ? `https://image.tmdb.org/t/p/original${part.poster_path}`\r\n                                                : require(\"../assets/noPosterSmall.png\").default\r\n                                            }\r\n                                        />                                        \r\n                                    </ItemContainer>  \r\n                                </>                          \r\n                            ))}\r\n                        </Data>\r\n                    </Content>\r\n                </Container>\r\n            )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Collections;","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Header from \"./Header\";\r\nimport Collections from \"Routes/Collections\";\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n        <Header />\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/tv\" exact component={TV} />\r\n            <Route path=\"/search\" component={Search} />\r\n            <Route path=\"/movie/:id\" component={Detail} />\r\n            <Route path=\"/show/:id\" component={Detail} />\r\n            <Route path=\"/collections/:id\" component={Collections} />\r\n            <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n        </>\r\n    </Router>\r\n)","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;","import Router from \"./Router\";\nimport GlobalStyles from \"./GllbalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}